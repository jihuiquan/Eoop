package com.jianye.smart.module.workbench.bdo.adapter;import java.io.File;import java.net.URLEncoder;import java.util.List;import android.app.Activity;import android.content.Context;import android.content.Intent;import android.os.Handler;import android.os.Message;import android.util.Log;import android.view.LayoutInflater;import android.view.View;import android.view.View.OnClickListener;import android.view.ViewGroup;import android.widget.BaseAdapter;import android.widget.Button;import android.widget.ImageView;import android.widget.ListView;import android.widget.TextView;import com.androidquery.AQuery;import com.movit.platform.common.constants.CommConstants;import com.movit.platform.framework.utils.FileUtils;import com.movit.platform.framework.view.progress.DownLoadProcessListener;import com.movit.platform.framework.view.viewpager.ImageViewPagerActivity;import com.movit.platform.sc.module.zone.activity.ZonePublishActivity;import com.jianye.smart.R;import com.jianye.smart.module.workbench.bdo.model.BDOCloud;import com.jianye.smart.view.NumberCircleProgressBar;import com.jianye.smart.view.NumberCircleProgressBar.ProgressTextVisibility;public class BDOCloudAdapter extends BaseAdapter {	private Context context;	private LayoutInflater mInflater;	private List<BDOCloud> mData;	private ListView listView;	AQuery aq;	private Handler mHandler = new Handler() {		@Override		public void handleMessage(Message msg) {			super.handleMessage(msg);			switch (msg.what) {			case 1:				try {					int progress = msg.arg1;					int postion = msg.arg2;					String url = (String) msg.obj;					NumberCircleProgressBar circleProgressBar = (NumberCircleProgressBar) listView					.findViewWithTag("circleProgressBar" + url);					circleProgressBar.setProgress(progress);				} catch (Exception e) {					// TODO Auto-generated catch block					e.printStackTrace();				}				break;			case 2:				Log.v("handler", "2");				try {					int postion = msg.arg1;					String url = (String) msg.obj;					Button option = (Button) listView.findViewWithTag("option"					+ url);					NumberCircleProgressBar circleProgressBar = (NumberCircleProgressBar) listView					.findViewWithTag("circleProgressBar" + url);					circleProgressBar.setVisibility(View.INVISIBLE);					option.setVisibility(View.VISIBLE);					option.setText("打开");				} catch (Exception e) {					// TODO Auto-generated catch block					e.printStackTrace();				}				break;			case 3:				Log.v("handler", "3");				try {					int postion = msg.arg1;					String url = (String) msg.obj;					Button option = (Button) listView.findViewWithTag("option"					+ url);					NumberCircleProgressBar circleProgressBar = (NumberCircleProgressBar) listView					.findViewWithTag("circleProgressBar" + url);					circleProgressBar.setVisibility(View.INVISIBLE);					option.setVisibility(View.VISIBLE);					option.setText("下载");				} catch (Exception e) {					// TODO Auto-generated catch block					e.printStackTrace();				}				break;			default:				break;			}		}	};	public BDOCloudAdapter(Context context, List<BDOCloud> mData,	ListView listView, Handler handler) {		super();		this.context = context;		this.mData = mData;		this.mInflater = LayoutInflater.from(context);		this.listView = listView;		aq = new AQuery(context);	}	@Override	public int getCount() {		return mData.size();	}	@Override	public Object getItem(int arg0) {		// TODO Auto-generated method stub		return mData.get(arg0);	}	@Override	public long getItemId(int arg0) {		// TODO Auto-generated method stub		return arg0;	}	@Override	public View getView(final int postion, View converView, ViewGroup arg2) {		ViewHolder holder = null;		if (converView == null		|| converView.getTag(R.id.bdo_cloud_item_icon + postion) == null) {			holder = new ViewHolder();			converView = mInflater.inflate(R.layout.bdo_cloud_list_item, arg2,			false);			holder.name = (TextView) converView			.findViewById(R.id.bdo_cloud_item_name);			holder.photo = (ImageView) converView			.findViewById(R.id.bdo_cloud_item_icon);			holder.time = (TextView) converView			.findViewById(R.id.bdo_cloud_item_time);			holder.option = (Button) converView			.findViewById(R.id.bdo_cloud_item_option);			holder.circleProgressBar = (NumberCircleProgressBar) converView			.findViewById(R.id.bdo_cloud_item_numberCircleProgressBar);			holder.go = (ImageView) converView			.findViewById(R.id.bdo_cloud_item_go);			converView.setTag(R.id.bdo_cloud_item_icon + postion, holder);		} else {			holder = (ViewHolder) converView.getTag(R.id.bdo_cloud_item_icon			+ postion);		}		AQuery aQuery = aq.recycle(converView);		BDOCloud bdoCloud = (BDOCloud) getItem(postion);		String type = bdoCloud.getType();		if (type.equals("1")) {			aQuery.id(holder.photo).image(R.drawable.bdo_cloud_exl);		} else if (type.equals("2")) {			aQuery.id(holder.photo).image(R.drawable.bdo_cloud_filepdf);		} else if (type.equals("3")) {			aQuery.id(holder.photo).image(R.drawable.bdo_cloud_folder);			holder.option.setVisibility(View.GONE);			holder.circleProgressBar.setVisibility(View.GONE);			holder.go.setVisibility(View.VISIBLE);		} else if (type.equals("4")) {			aQuery.id(holder.photo).image(R.drawable.bdo_cloud_imgjpg);		} else if (type.equals("5")) {			aQuery.id(holder.photo).image(R.drawable.bdo_cloud_imgpng);		} else if (type.equals("6")) {			aQuery.id(holder.photo).image(R.drawable.bdo_cloud_ppt);		} else if (type.equals("7")) {			aQuery.id(holder.photo).image(R.drawable.bdo_cloud_word);		} else {			aQuery.id(holder.photo).image(R.drawable.bdo_cloud_others);		}		String url = bdoCloud.getUrl();		int index = url.lastIndexOf("/");		String fileName = url.substring(index + 1);		File file = new File(CommConstants.SD_DOCUMENT + fileName);		if (file.exists()) {			holder.option.setText("打开");		} else {			holder.option.setText("下载");		}		holder.option		.setOnClickListener(new OnMyClickLinsten(fileName, postion));		holder.circleProgressBar		.setProgressTextVisibility(ProgressTextVisibility.Invisible);		holder.option.setTag("option" + bdoCloud.getUrl());		holder.circleProgressBar		.setTag("circleProgressBar" + bdoCloud.getUrl());		holder.name.setText(bdoCloud.getTitle());		// 开始走马灯效果		holder.name.setSelected(true);		return converView;	}	public class OnMyClickLinsten implements OnClickListener {		String fileName;		int postion;		public OnMyClickLinsten(String filePath, int postion) {			super();			this.fileName = filePath;			this.postion = postion;		}		@Override		public void onClick(View v) {			// TODO Auto-generated method stub			BDOCloud bdoCloud = (BDOCloud) getItem(postion);			String type = bdoCloud.getType();			final String url = bdoCloud.getUrl();			File file = new File(CommConstants.SD_DOCUMENT + fileName);			if (file.exists()) {				if (type.equals("1") || type.equals("2") || type.equals("6")				|| type.equals("7")) {					new FileUtils().openFile(context, file);				} else if (type.equals("3")) {// folder				} else if (type.equals("4") || type.equals("5")) {// jpg , png					ZonePublishActivity.selectImagesList.clear();					ZonePublishActivity.selectImagesList.add(file					.getAbsolutePath());					context.startActivity(new Intent(context,					ImageViewPagerActivity.class)					.putStringArrayListExtra("selectedImgs",					ZonePublishActivity.selectImagesList)					.putExtra("FromBucket", true));					((Activity) context).overridePendingTransition(0, 0);				} else {// others				}			} else {				// 去下载				Button option = (Button) listView.findViewWithTag("option"				+ url);				final NumberCircleProgressBar circleProgressBar = (NumberCircleProgressBar) listView				.findViewWithTag("circleProgressBar" + url);				option.setVisibility(View.GONE);				circleProgressBar.setVisibility(View.VISIBLE);				circleProgressBar.setProgress(0);				new Thread(new Runnable() {					@Override					public void run() {						// TODO Auto-generated method stub						try {							FileUtils fileUtils = new FileUtils();							fileUtils									.setDownLoadProcessListener(new DownLoadProcessListener() {										@Override										public void downLoadProcess(										Handler handler, int fileSize,												int downSize) {											// TODO Auto-generated method stub											int progress = (int) (downSize * 100 / fileSize);											mHandler.obtainMessage(1, progress,											postion, url)											.sendToTarget();										}									});							Log.v("down-document", "------down------" + url);							int k = fileUtils.downfile(mHandler,									CommConstants.URL_BDODOWNLOAD									+ URLEncoder.encode(fileName, "utf-8"),									CommConstants.SD_DOCUMENT, fileName);							if (k == 0 || k == 1) {// 或者已存在								mHandler.obtainMessage(2, postion, 0, url)								.sendToTarget();							} else if (k == -1) {// 失败								mHandler.obtainMessage(3, postion, 0, url)								.sendToTarget();							}						} catch (Exception e) {							// TODO Auto-generated catch block							e.printStackTrace();							mHandler.obtainMessage(3, postion, 0, url)							.sendToTarget();						}					}				}).start();			}		}	}	public final class ViewHolder {		public ImageView photo;		public TextView name;		public TextView time;		public Button option;		public NumberCircleProgressBar circleProgressBar;		public ImageView go;	}}