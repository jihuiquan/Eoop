package com.movit.platform.innerea.db;import android.content.ContentValues;import android.content.Context;import android.database.Cursor;import android.database.SQLException;import android.database.sqlite.SQLiteDatabase;import com.movit.platform.framework.utils.DateUtils;import java.util.ArrayList;import java.util.Calendar;/** * 操作类 */public class DBManager {    private DBHepler dbHeple;    private SQLiteDatabase db;    public DBManager(Context context, String DB_NAME) throws SQLException {        dbHeple = new DBHepler(context, DB_NAME);    }    public int insertGPSLog(String time) {        // 多条数据的时候删除第2条，保证只有2条        if (time.contains("T") && time.contains("Z")) {            time = time.replace("T", " ");            time = time.replace("Z", "");            if (time.contains(".")) {                time = time.substring(0, time.lastIndexOf("."));            }        }        ArrayList<Integer> idList = findLogByTime(time);        if (idList.size() > 1) {            int id = idList.get(1);            deleteLogById(id);        }        db = dbHeple.getWritableDatabase();        // 2015-11-04 14:44:51        ContentValues values = new ContentValues();        values.put("day", time.substring(0, 10));        values.put("time", time.substring(11));        long sid = db.insert(DBHepler.Table_LOG, null, values);        return (int) sid;    }    /**     * 根据时间查询当天有效时间范围内的打卡记录，为6点到明天凌晨6点 算当天     *     * @param timeStr     * @return     */    public ArrayList<Integer> findLogByTime(String timeStr) {        db = dbHeple.getReadableDatabase();        String today = timeStr.substring(0, 10);        String timeClock = timeStr.substring(11);        Calendar cDay = DateUtils.str2Calendar(today, "yyyy-MM-dd");        Calendar cTime = DateUtils.str2Calendar(timeClock, "HH:mm:ss");        cDay.roll(Calendar.DAY_OF_YEAR, -1);        String preDay = DateUtils.date2Str(cDay, "yyyy-MM-dd");        Cursor c = db.query(DBHepler.Table_LOG, null,                "day = ? or day = ?", new String[]{today, preDay}, null,                null, null);        ArrayList<String> list = new ArrayList<String>();        ArrayList<Integer> idList = new ArrayList<Integer>();        while (c.moveToNext()) {            int _id = c.getInt(c.getColumnIndex("_id"));            String day = c.getString(c.getColumnIndex("day"));            String time = c.getString(c.getColumnIndex("time"));            Calendar tTime = DateUtils.str2Calendar(time, "HH:mm:ss");            if (cTime.get(Calendar.HOUR_OF_DAY) >= 6) {// 只需要看当天>6点的记录                if (!day.equals(today) || tTime.get(Calendar.HOUR_OF_DAY) < 6) {                    continue;                }            } else {// 昨天的记录 >6点的记录才有效                if (tTime.get(Calendar.HOUR_OF_DAY) < 6) {                    continue;                }            }            list.add(day);            idList.add(_id);        }        if (c != null) {            c.close();        }        return idList;    }    /**     * 根据日期返回当前数据的 time 需要查询当天和明天的2天记录     *     * @param today     * @return     */    public ArrayList<String> getLogByDay(String today) {        db = dbHeple.getReadableDatabase();        Calendar cDay = DateUtils.str2Calendar(today, "yyyy-MM-dd");        cDay.roll(Calendar.DAY_OF_YEAR, 1);        String nextDay = DateUtils.date2Str(cDay, "yyyy-MM-dd");        Cursor c = db.query(DBHepler.Table_LOG, null,                "day = ? or day = ?", new String[]{today, nextDay}, null,                null, null);        ArrayList<String> list = new ArrayList<>();        while (c.moveToNext()) {            String day = c.getString(c.getColumnIndex("day"));            String time = c.getString(c.getColumnIndex("time"));            if (day.equals(today)) {                Calendar cTime = DateUtils.str2Calendar(time, "HH:mm:ss");                if (cTime.get(Calendar.HOUR_OF_DAY) < 6) {                    continue;                }            }            if (day.equals(nextDay)) {                Calendar cTime = DateUtils.str2Calendar(time, "HH:mm:ss");                if (cTime.get(Calendar.HOUR_OF_DAY) >= 6) {                    continue;                }            }            list.add(day + " " + time);        }        if (c != null) {            c.close();        }        return list;    }    public void deleteLogById(int id) {        db = dbHeple.getReadableDatabase();        db.delete(DBHepler.Table_LOG, "_id=?", new String[]{id + "" });    }    public void deleteAllLogsWithoutToday() {        db = dbHeple.getReadableDatabase();        Calendar calendar = Calendar.getInstance();        String today = DateUtils.date2Str(calendar, "yyyy-MM-dd");        db.delete(DBHepler.Table_LOG, "day != ? ",                new String[]{today});    }    public void deleteAll() {        db = dbHeple.getReadableDatabase();        db.delete(DBHepler.Table_LOG, "day != ? ", new String[]{"yyyy-MM-dd" });    }    /**     * 关闭数据库     */    public void closeDb() {        try {            if (db != null) {                db.close();            }            if (dbHeple != null) {                dbHeple.close();            }        } catch (Exception e) {            e.printStackTrace();        }    }}